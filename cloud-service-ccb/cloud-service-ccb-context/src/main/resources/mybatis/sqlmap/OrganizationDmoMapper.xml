<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cloud.ccb.context.domain.mappers.OrganizationDmoMapper" >
  <resultMap id="BaseResultMap" type="com.cloud.ccb.context.domain.mappers.dmo.OrganizationDmo" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="organization_type" property="organizationType" jdbcType="VARCHAR" />
    <result column="register_number" property="registerNumber" jdbcType="VARCHAR" />
    <result column="zip_code" property="zipCode" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="organization_code" property="organizationCode" jdbcType="VARCHAR" />
    <result column="business_scope" property="businessScope" jdbcType="VARCHAR" />
    <result column="business_license" property="businessLicense" jdbcType="VARCHAR" />
    <result column="license_type" property="licenseType" jdbcType="VARCHAR" />
    <result column="legal_person_name" property="legalPersonName" jdbcType="VARCHAR" />
    <result column="legal_person_id_number" property="legalPersonIdNumber" jdbcType="VARCHAR" />
    <result column="legal_person_id_front" property="legalPersonIdFront" jdbcType="VARCHAR" />
    <result column="legal_person_id_back" property="legalPersonIdBack" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, organization_type, register_number, zip_code, address, organization_code, 
    business_scope, business_license, license_type, legal_person_name, legal_person_id_number, 
    legal_person_id_front, legal_person_id_back
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cloud.ccb.context.domain.mappers.dmo.OrganizationDmoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_organization
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_organization
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_organization
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.cloud.ccb.context.domain.mappers.dmo.OrganizationDmoExample" >
    delete from t_organization
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cloud.ccb.context.domain.mappers.dmo.OrganizationDmo" >
    insert into t_organization (id, name, organization_type, 
      register_number, zip_code, address, 
      organization_code, business_scope, business_license, 
      license_type, legal_person_name, legal_person_id_number, 
      legal_person_id_front, legal_person_id_back)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{organizationType,jdbcType=VARCHAR}, 
      #{registerNumber,jdbcType=VARCHAR}, #{zipCode,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{organizationCode,jdbcType=VARCHAR}, #{businessScope,jdbcType=VARCHAR}, #{businessLicense,jdbcType=VARCHAR}, 
      #{licenseType,jdbcType=VARCHAR}, #{legalPersonName,jdbcType=VARCHAR}, #{legalPersonIdNumber,jdbcType=VARCHAR}, 
      #{legalPersonIdFront,jdbcType=VARCHAR}, #{legalPersonIdBack,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cloud.ccb.context.domain.mappers.dmo.OrganizationDmo" >
    insert into t_organization
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="organizationType != null" >
        organization_type,
      </if>
      <if test="registerNumber != null" >
        register_number,
      </if>
      <if test="zipCode != null" >
        zip_code,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="organizationCode != null" >
        organization_code,
      </if>
      <if test="businessScope != null" >
        business_scope,
      </if>
      <if test="businessLicense != null" >
        business_license,
      </if>
      <if test="licenseType != null" >
        license_type,
      </if>
      <if test="legalPersonName != null" >
        legal_person_name,
      </if>
      <if test="legalPersonIdNumber != null" >
        legal_person_id_number,
      </if>
      <if test="legalPersonIdFront != null" >
        legal_person_id_front,
      </if>
      <if test="legalPersonIdBack != null" >
        legal_person_id_back,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="organizationType != null" >
        #{organizationType,jdbcType=VARCHAR},
      </if>
      <if test="registerNumber != null" >
        #{registerNumber,jdbcType=VARCHAR},
      </if>
      <if test="zipCode != null" >
        #{zipCode,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="organizationCode != null" >
        #{organizationCode,jdbcType=VARCHAR},
      </if>
      <if test="businessScope != null" >
        #{businessScope,jdbcType=VARCHAR},
      </if>
      <if test="businessLicense != null" >
        #{businessLicense,jdbcType=VARCHAR},
      </if>
      <if test="licenseType != null" >
        #{licenseType,jdbcType=VARCHAR},
      </if>
      <if test="legalPersonName != null" >
        #{legalPersonName,jdbcType=VARCHAR},
      </if>
      <if test="legalPersonIdNumber != null" >
        #{legalPersonIdNumber,jdbcType=VARCHAR},
      </if>
      <if test="legalPersonIdFront != null" >
        #{legalPersonIdFront,jdbcType=VARCHAR},
      </if>
      <if test="legalPersonIdBack != null" >
        #{legalPersonIdBack,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cloud.ccb.context.domain.mappers.dmo.OrganizationDmoExample" resultType="java.lang.Integer" >
    select count(*) from t_organization
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_organization
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.organizationType != null" >
        organization_type = #{record.organizationType,jdbcType=VARCHAR},
      </if>
      <if test="record.registerNumber != null" >
        register_number = #{record.registerNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.zipCode != null" >
        zip_code = #{record.zipCode,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.organizationCode != null" >
        organization_code = #{record.organizationCode,jdbcType=VARCHAR},
      </if>
      <if test="record.businessScope != null" >
        business_scope = #{record.businessScope,jdbcType=VARCHAR},
      </if>
      <if test="record.businessLicense != null" >
        business_license = #{record.businessLicense,jdbcType=VARCHAR},
      </if>
      <if test="record.licenseType != null" >
        license_type = #{record.licenseType,jdbcType=VARCHAR},
      </if>
      <if test="record.legalPersonName != null" >
        legal_person_name = #{record.legalPersonName,jdbcType=VARCHAR},
      </if>
      <if test="record.legalPersonIdNumber != null" >
        legal_person_id_number = #{record.legalPersonIdNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.legalPersonIdFront != null" >
        legal_person_id_front = #{record.legalPersonIdFront,jdbcType=VARCHAR},
      </if>
      <if test="record.legalPersonIdBack != null" >
        legal_person_id_back = #{record.legalPersonIdBack,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_organization
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      organization_type = #{record.organizationType,jdbcType=VARCHAR},
      register_number = #{record.registerNumber,jdbcType=VARCHAR},
      zip_code = #{record.zipCode,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      organization_code = #{record.organizationCode,jdbcType=VARCHAR},
      business_scope = #{record.businessScope,jdbcType=VARCHAR},
      business_license = #{record.businessLicense,jdbcType=VARCHAR},
      license_type = #{record.licenseType,jdbcType=VARCHAR},
      legal_person_name = #{record.legalPersonName,jdbcType=VARCHAR},
      legal_person_id_number = #{record.legalPersonIdNumber,jdbcType=VARCHAR},
      legal_person_id_front = #{record.legalPersonIdFront,jdbcType=VARCHAR},
      legal_person_id_back = #{record.legalPersonIdBack,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cloud.ccb.context.domain.mappers.dmo.OrganizationDmo" >
    update t_organization
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="organizationType != null" >
        organization_type = #{organizationType,jdbcType=VARCHAR},
      </if>
      <if test="registerNumber != null" >
        register_number = #{registerNumber,jdbcType=VARCHAR},
      </if>
      <if test="zipCode != null" >
        zip_code = #{zipCode,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="organizationCode != null" >
        organization_code = #{organizationCode,jdbcType=VARCHAR},
      </if>
      <if test="businessScope != null" >
        business_scope = #{businessScope,jdbcType=VARCHAR},
      </if>
      <if test="businessLicense != null" >
        business_license = #{businessLicense,jdbcType=VARCHAR},
      </if>
      <if test="licenseType != null" >
        license_type = #{licenseType,jdbcType=VARCHAR},
      </if>
      <if test="legalPersonName != null" >
        legal_person_name = #{legalPersonName,jdbcType=VARCHAR},
      </if>
      <if test="legalPersonIdNumber != null" >
        legal_person_id_number = #{legalPersonIdNumber,jdbcType=VARCHAR},
      </if>
      <if test="legalPersonIdFront != null" >
        legal_person_id_front = #{legalPersonIdFront,jdbcType=VARCHAR},
      </if>
      <if test="legalPersonIdBack != null" >
        legal_person_id_back = #{legalPersonIdBack,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cloud.ccb.context.domain.mappers.dmo.OrganizationDmo" >
    update t_organization
    set name = #{name,jdbcType=VARCHAR},
      organization_type = #{organizationType,jdbcType=VARCHAR},
      register_number = #{registerNumber,jdbcType=VARCHAR},
      zip_code = #{zipCode,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      organization_code = #{organizationCode,jdbcType=VARCHAR},
      business_scope = #{businessScope,jdbcType=VARCHAR},
      business_license = #{businessLicense,jdbcType=VARCHAR},
      license_type = #{licenseType,jdbcType=VARCHAR},
      legal_person_name = #{legalPersonName,jdbcType=VARCHAR},
      legal_person_id_number = #{legalPersonIdNumber,jdbcType=VARCHAR},
      legal_person_id_front = #{legalPersonIdFront,jdbcType=VARCHAR},
      legal_person_id_back = #{legalPersonIdBack,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>